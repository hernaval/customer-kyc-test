package com.testapp.onboarding_service.service.impl;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.testapp.onboarding_service.dto.CustomerApplicationDto;
import com.testapp.onboarding_service.exceptions.ExistingCustomerException;
import com.testapp.onboarding_service.mapper.CustomerApplicationMapper;
import com.testapp.onboarding_service.model.CustomerApplication;
import com.testapp.onboarding_service.repository.CustomerApplicationRepository;
import com.testapp.onboarding_service.service.CustomerApplicationService;
import com.testapp.onboarding_service.service.StorageService;

@Service
public class CustomerApplicationImpl implements CustomerApplicationService {
	private static final Logger LOGGER = LoggerFactory.getLogger(CustomerApplicationImpl.class);

	@Autowired
	private CustomerApplicationRepository repository;
	
	@Autowired
	private StorageService storage;
	
	private CustomerApplicationMapper mapper;
	
	@Override
	public CustomerApplication save(final CustomerApplicationDto customerApplication) {
		LOGGER.debug("==> save customerApplication {}", customerApplication);
		
		boolean applicationExists = repository.existsByEmail(customerApplication.email());
		if(applicationExists) {
			throw new ExistingCustomerException("A customer application already exists with email: "+customerApplication.email());
		}
		
		// TODO Auto-generated method stub
		CustomerApplication newApplication = repository.save(mapper.dtoToEntity(customerApplication));
		
		return mapper.entityToDto(newApplication);
	}

}
